# Generated by precisionFDA exporter (v1.0.3) on 2018-06-14 16:41:30 +0000
# The asset download links in this file are valid only for 24h.

# Exported app: clamms_compute_windows, revision: 16, authored by: evan.maxwell.2
# https://precision.fda.gov/apps/app-F0V2jQ804XXz6G90pZB10fJj

# For more information please consult the app export section in the precisionFDA docs

# Start with Ubuntu 14.04 base image
FROM ubuntu:14.04

# Install default precisionFDA Ubuntu packages
RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y \
	aria2 \
	byobu \
	cmake \
	cpanminus \
	curl \
	dstat \
	g++ \
	git \
	htop \
	libboost-all-dev \
	libcurl4-openssl-dev \
	libncurses5-dev \
	make \
	perl \
	pypy \
	python-dev \
	python-pip \
	r-base \
	ruby1.9.3 \
	wget \
	xz-utils

# Install default precisionFDA python packages
RUN pip install \
	requests==2.5.0 \
	futures==2.2.0 \
	setuptools==10.2

# Add DNAnexus repo to apt-get
RUN /bin/bash -c "echo 'deb http://dnanexus-apt-prod.s3.amazonaws.com/ubuntu trusty/amd64/' > /etc/apt/sources.list.d/dnanexus.list"
RUN /bin/bash -c "echo 'deb http://dnanexus-apt-prod.s3.amazonaws.com/ubuntu trusty/all/' >> /etc/apt/sources.list.d/dnanexus.list"
RUN curl https://wiki.dnanexus.com/images/files/ubuntu-signing-key.gpg | apt-key add -

# Update apt-get
RUN DEBIAN_FRONTEND=noninteractive apt-get update

# Download app assets
RUN curl https://dl.dnanex.us/F/D/pz0310PBX5v56z7K7q8zbVfFKFbvK89Zgjyj21Jj/bedtools-2.25.tar.gz | tar xzf - -C / --no-same-owner --no-same-permissions
RUN curl https://dl.dnanex.us/F/D/YQkb4YF35Y43FZB27bzq7zfb5y4BXKVfxBFbPYzz/clamms_compute_windows_assets.tar.gz | tar xzf - -C / --no-same-owner --no-same-permissions
RUN curl https://dl.dnanex.us/F/D/Xvk05BX5PQ5GZ12PGPfjFVZk3kK43078pGYzQkB6/grch37-fasta.tar.gz | tar xzf - -C / --no-same-owner --no-same-permissions

# Download helper executables
RUN curl https://dl.dnanex.us/F/D/0K8P4zZvjq9vQ6qV0b6QqY1z2zvfZ0QKQP4gjBXp/emit-1.0.tar.gz | tar xzf - -C /usr/bin/ --no-same-owner --no-same-permissions
RUN curl https://dl.dnanex.us/F/D/bByKQvv1F7BFP3xXPgYXZPZjkXj9V684VPz8gb7p/run-1.2.tar.gz | tar xzf - -C /usr/bin/ --no-same-owner --no-same-permissions

# Write app spec and code to root folder
RUN ["/bin/bash","-c","echo -E \\{\\\"spec\\\":\\{\\\"input_spec\\\":\\[\\{\\\"name\\\":\\\"targets_bed_file\\\",\\\"class\\\":\\\"file\\\",\\\"optional\\\":false,\\\"label\\\":\\\"Target\\ regions\\ BED\\ file\\\",\\\"help\\\":\\\"BED\\ file\\ of\\ target\\ regions\\ \\(e.g.\\ exons\\)\\\",\\\"default\\\":\\\"file-F0QJyPQ0V7B6Zj590J8YzqQ2\\\"\\},\\{\\\"name\\\":\\\"genome_fasta\\\",\\\"class\\\":\\\"file\\\",\\\"optional\\\":true,\\\"label\\\":\\\"Reference\\ genome\\ FASTA\\ file\\ \\(default\\ grch37\\)\\\",\\\"help\\\":\\\"FASTA\\ file\\ of\\ the\\ reference\\ genome\\ \\(optionally\\ gzipped,\\ default\\ \\ \\(default\\ grch37\\)\\\"\\},\\{\\\"name\\\":\\\"genome_fasta_index\\\",\\\"class\\\":\\\"file\\\",\\\"optional\\\":true,\\\"label\\\":\\\"Reference\\ genome\\ FASTA\\ index\\ file\\ \\ \\(default\\ grch37\\)\\\",\\\"help\\\":\\\"FASTA\\ index\\ file\\ of\\ the\\ reference\\ genome\\ \\(.fai\\ file,\\ default\\ grch37\\)\\\"\\},\\{\\\"name\\\":\\\"mappability_bed_file\\\",\\\"class\\\":\\\"file\\\",\\\"optional\\\":false,\\\"label\\\":\\\"Reference\\ genome\\ mappability\\ BED\\ file\\\",\\\"help\\\":\\\"BED\\ file\\ containing\\ mappability\\ of\\ the\\ reference\\ genome\\ \\(optionally\\ gzipped\\)\\\",\\\"default\\\":\\\"file-F0QGg480V7B6QVKGb5b187fP\\\"\\},\\{\\\"name\\\":\\\"special_regions_bed_file\\\",\\\"class\\\":\\\"file\\\",\\\"optional\\\":false,\\\"label\\\":\\\"Special\\ regions\\ BED\\ file\\\",\\\"help\\\":\\\"BED\\ file\\ of\\ known\\ multi-copy\\ duplication\\ regions\\ \\(expected\\ copy\\ number\\ \\\\u003e\\ 3\\)\\ and\\ problematic\\ regions\\ to\\ blacklist\\\",\\\"default\\\":\\\"file-F0QG3x80V7B3Yx5pkGB3yXK7\\\"\\},\\{\\\"name\\\":\\\"insert_size\\\",\\\"class\\\":\\\"int\\\",\\\"optional\\\":false,\\\"label\\\":\\\"Insert\\ size\\\",\\\"help\\\":\\\"Sequencing\\ insert\\ size\\ \\(in\\ number\\ of\\ base\\ pairs\\)\\\",\\\"default\\\":200\\}\\],\\\"output_spec\\\":\\[\\{\\\"name\\\":\\\"clamms_windows_bed_file\\\",\\\"class\\\":\\\"file\\\",\\\"optional\\\":false,\\\"label\\\":\\\"CLAMMS\\ windows\\ BED\\ file\\\",\\\"help\\\":\\\"BED\\ file\\ of\\ computed\\ and\\ annotated\\ CLAMMS\\ windows\\\"\\}\\],\\\"internet_access\\\":false,\\\"instance_type\\\":\\\"baseline-2\\\"\\},\\\"assets\\\":\\[\\\"file-Bk5K5yj0qVb1VgP6pVJPyv8p\\\",\\\"file-F09k4fQ0V7BFvKVQXxFJk6VP\\\",\\\"file-Bk5xvzQ0qVb5k0VYzZQG7BXJ\\\"\\],\\\"packages\\\":\\[\\]\\} \u003e /spec.json"]
RUN ["/bin/bash","-c","echo -E \\{\\\"code\\\":\\\"export\\ CLAMMS_DIR\\=/usr/bin\\\\n\\\\nif\\ \\!\\ gunzip\\ -q\\ \\\\\\\"\\$mappability_bed_file_path\\\\\\\"\\ \\\\u0026\\\\u003e\\ /dev/null\\;\\ then\\ \\\\n\\ \\ mv\\ \\\\\\\"\\$mappability_bed_file_path\\\\\\\"\\ \\\\\\\"in/mappability_bed_file/\\$\\{mappability_bed_file_prefix\\}.bed\\\\\\\"\\\\nfi\\\\n\\\\nif\\ \\[\\ -z\\ \\\\\\\"\\$genome_fasta\\\\\\\"\\ \\]\\;\\ then\\\\n\\ \\ genome_fasta_path\\=/work/grch37.fa\\\\nelif\\ \\!\\ gunzip\\ -q\\ \\\\\\\"\\$genome_fasta_path\\\\\\\"\\ \\\\u0026\\\\u003e\\ /dev/null\\;\\ then\\ \\\\n\\ \\ mv\\ \\\\\\\"\\$genome_fasta_path\\\\\\\"\\ \\\\\\\"in/genome_fasta/\\$\\{genome_fasta_prefix\\}.fa\\\\\\\"\\\\n\\ \\ mv\\ \\\\\\\"\\$genome_fasta_index_path\\\\\\\"\\ \\\\\\\"in/genome_fasta/\\$\\{genome_fasta_prefix\\}.fa.fai\\\\\\\"\\\\nelse\\\\n\\ \\ mv\\ \\\\\\\"\\$genome_fasta_index_path\\\\\\\"\\ \\\\\\\"in/genome_fasta/\\$\\{genome_fasta_prefix\\}.fa.fai\\\\\\\"\\\\nfi\\\\n\\\\n\\$CLAMMS_DIR/annotate_windows.sh\\ \\\\\\\"\\$targets_bed_file_path\\\\\\\"\\ \\\\\\\"\\$genome_fasta_path\\\\\\\"\\ \\\\\\\"in/mappability_bed_file/\\$\\{mappability_bed_file_prefix\\}.bed\\\\\\\"\\ \\\\\\\"\\$insert_size\\\\\\\"\\ \\\\\\\"\\$special_regions_bed_file_path\\\\\\\"\\ \\\\u003e\\ windows.bed\\\\n\\\\nemit\\ clamms_windows_bed_file\\ windows.bed\\\"\\} | python -c 'import sys,json; print json.load(sys.stdin)[\"code\"]' \u003e /script.sh"]

# Create directory /work and set it to $HOME and CWD
RUN mkdir -p /work
ENV HOME="/work"
WORKDIR /work

# Set entry point to container
ENTRYPOINT ["/usr/bin/run"]

VOLUME /data
VOLUME /work